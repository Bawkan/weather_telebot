from api.api_bot_site import bot
from aiogram import types
from module import lat, lon, weather
from certain_time import time_weather
import requests
from api.api_bot_site import weather_token
import sqlite3
from key_board_button import func_keyboard, questions


@bot.message_handler(commands=["start", "help"])
def start_bot(message):
    bot.send_message(
        message.from_user.id,
        f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}."
        f"\n–Ø –±–æ—Ç –ö–æ—Ç–æ—Ä—ã–π —É–∑–Ω–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤–æ –≤—Å–µ–º –º–∏—Ä–µ."
        f'\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–∞–∂–º–∏—Ç–µ "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –º–æ–µ–º –≥–æ—Ä–æ–¥–µ‚õÖ"',
        reply_markup=[func_keyboard()],
    )


@bot.message_handler(content_types="text")
def commune(message: types.Message):
    connect = sqlite3.connect("orders.db")
    cursor = connect.cursor()
    cursor.execute(
        """CREATE TABLE IF NOT EXISTS login_id(
        id INTEGER
        )"""
    )
    connect.commit()

    user_id = [message.chat.id]
    cursor.execute("INSERT INTO login_id VALUES(?);", user_id)
    connect.commit()

    if message.text == "–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—èüëã":
        bot.send_message(
            message.from_user.id,
            f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}",
            reply_markup=[func_keyboard()],
        )

    elif message.text == "–ö–∞–∫ —Ç–µ–±—è –ó–æ–≤—É—Ç?ü§î":
        bot.send_message(message.from_user.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ß–∞–ø–ø–∏")

    elif message.text == "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –º–æ–µ–º –≥–æ—Ä–æ–¥–µ‚õÖ":
        api_weather = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={weather_token}&units=metric"
        )
        data = api_weather.json()
        temp = data["main"]["temp"]
        bot.send_message(
            message.from_user.id,
            f"–ü–æ–≥–æ–¥–∞ –≤ —Ç–æ–≤–µ–º –≥–æ—Ä–æ–¥–µ {temp}",
            reply_markup=[func_keyboard()],
        )

    elif message.text == "–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ‚õÖ":
        bot.send_message(
            message.from_user.id,
            "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É‚õÖ:",
            reply_markup=[func_keyboard()],
        )
        bot.register_next_step_handler(message, weather)

    elif message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì":
        bot.send_message(
            message.from_user.id,
            f"–°–ª—É—à–∞—é –≤–∞—Å{message.from_user.first_name}ü§ñ",
            reply_markup=[questions()],
        )
    elif message.text == "–ö–∞–∫ —Ç–µ–±—è –ó–æ–≤—É—Ç?ü§î":
        bot.send_message(message.from_user.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ß–∞–ø–ø–∏")

    elif message.text == "–ù–∞–∑–∞–¥üîô":
        bot.send_message(
            message.from_user.id,
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ",
            reply_markup=[func_keyboard()],
        )

    elif message.text == "–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–≥–æ–¥—ã –∫–∞–∂–¥—ã–π —á–∞—Å‚õÖ":
        bot.send_message(
            message.from_user.id,
            "–í–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –∫–∞–∂–¥—ã–π —á–∞—Å,—Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòâ",
            reply_markup=[func_keyboard()],
        )

        time_weather(message)

    else:
        bot.send_message(
            message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞"
        )


bot.polling(none_stop=True, interval=0)
